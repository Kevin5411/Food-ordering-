{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanket\\\\online food ordering\\\\frontend\\\\src\\\\Screens\\\\HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Menu from '../components/Menu';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { useSelector } from 'react-redux';\nimport { listMenus } from '../actions/menuActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomeScreen() {\n  _s();\n\n  const menuList = useSelector(state => state.menuList);\n  const {\n    loading,\n    error,\n    menus\n  } = menuList;\n  useEffect(() => {\n    dispatch(listMenus());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row center\",\n      children: menus.map(menu => /*#__PURE__*/_jsxDEV(Menu, {\n        menu: menu\n      }, menu._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomeScreen, \"6fhH3zj3uhfwgEyhZDtmukvsvKM=\", false, function () {\n  return [useSelector];\n});\n\n_c = HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["C:/Users/Sanket/online food ordering/frontend/src/Screens/HomeScreen.js"],"names":["React","useEffect","Menu","LoadingBox","MessageBox","useSelector","listMenus","HomeScreen","menuList","state","loading","error","menus","dispatch","map","menu","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAmC,OAAnC;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAIA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAEjC,QAAMC,QAAQ,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AACA,QAAM;AAACE,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA0BJ,QAAhC;AACAP,EAAAA,SAAS,CAAC,MAAM;AACbY,IAAAA,QAAQ,CAACP,SAAS,EAAV,CAAR;AACF,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACA;AAAA,cACKI,OAAO,gBACJ,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADI,GAGJC,KAAK,gBACL,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAAA,gBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,YADK,gBAGL;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAEQC,KAAK,CAACE,GAAN,CAAWC,IAAD,iBACN,QAAC,IAAD;AAAqB,QAAA,IAAI,EAAEA;AAA3B,SAAWA,IAAI,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AAPR;AAAA;AAAA;AAAA;AAAA,UADA;AAsBH;;GA7BuBT,U;UAEHF,W;;;KAFGE,U","sourcesContent":["import React, { useEffect,  } from 'react';\r\n\r\nimport Menu from '../components/Menu';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { useSelector } from 'react-redux';\r\nimport { listMenus } from '../actions/menuActions';\r\n\r\n\r\n\r\nexport default function HomeScreen() {\r\n\r\n    const menuList = useSelector((state) => state.menuList);\r\n    const {loading, error, menus} = menuList \r\n    useEffect(() => {\r\n       dispatch(listMenus());\r\n    }, []);\r\n    return (\r\n    <div>\r\n        {loading ? (\r\n            <LoadingBox></LoadingBox>\r\n\r\n        ) : error ? (\r\n            <MessageBox variant=\"danger\">{error}</MessageBox>\r\n        ) : (\r\n            <div className=\"row center\">\r\n                {\r\n                    menus.map((menu) => (\r\n                        <Menu key={menu._id} menu={menu}></Menu>\r\n                    ))\r\n                }\r\n\r\n\r\n            </div>\r\n        )}\r\n\r\n    </div>);\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}