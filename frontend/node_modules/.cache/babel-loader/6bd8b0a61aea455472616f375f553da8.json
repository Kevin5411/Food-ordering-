{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanket\\\\online food ordering\\\\frontend\\\\src\\\\Screens\\\\CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addToCart } from '../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CartScreen(props) {\n  _s();\n\n  const menuId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split('=')[1]) : 1;\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (menuId) {\n      dispatch(addToCart(menuId, qty));\n    }\n  }, [dispatch, menuId, qty]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cart Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ADD TO CART : MenuID: \", menuId, \" Qty: \", qty]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartScreen, \"O8kV4FMad4uUEER48J0xtNwHiNw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["C:/Users/Sanket/online food ordering/frontend/src/Screens/CartScreen.js"],"names":["React","useEffect","useDispatch","useSelector","addToCart","CartScreen","props","menuId","match","params","id","qty","location","search","Number","split","cart","state","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,QAAMC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAAlC;AACA,QAAMC,GAAG,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAAf,GACRC,MAAM,CAACR,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAsBE,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAD,CADE,GAER,CAFJ;AAGE,QAAMC,IAAI,GAAEb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAvB;AACF,QAAME,QAAQ,GAAGhB,WAAW,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,MAAJ,EAAY;AACVW,MAAAA,QAAQ,CAACd,SAAS,CAACG,MAAD,EAASI,GAAT,CAAV,CAAR;AACD;AACF,GAJQ,EAIN,CAACO,QAAD,EAAWX,MAAX,EAAmBI,GAAnB,CAJM,CAAT;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,2CACuBJ,MADvB,YACqCI,GADrC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GApBuBN,U;UAKRF,W,EACGD,W;;;KANKG,U","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToCart } from '../actions/cartActions';\r\n\r\nexport default function CartScreen(props) {\r\n  const menuId = props.match.params.id;\r\n  const qty = props.location.search\r\n    ? Number(props.location.search.split('=')[1])\r\n    : 1;\r\n    const cart =useSelector((state) => state.cart);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (menuId) {\r\n      dispatch(addToCart(menuId, qty));\r\n    }\r\n  }, [dispatch, menuId, qty]);\r\n  return (\r\n    <div>\r\n      <h1>Cart Screen</h1>\r\n      <p>\r\n      ADD TO CART : MenuID: {menuId} Qty: {qty}\r\n      </p>\r\n      </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}